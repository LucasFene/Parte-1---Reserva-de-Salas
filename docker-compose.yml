version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  usuario:
    restart: always
    container_name: usuario
    build:
      context: ./usuario
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbUsuario:5432/usuariodb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SERVER_PORT=8082
    ports:
      - '8083:8082'
    depends_on:
      - rabbitmq
      - dbUsuario
    networks:
      - netUsuario
      - netApiGateway
  dbUsuario:
    image: postgres:latest
    restart: always
    container_name: dbUsuario
    environment:
      POSTGRES_DB: usuariodb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5433:5432'
    networks:
      - netUsuario

  reserva:
    restart: always
    container_name: reserva
    build:
      context: ./reserva
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbReserva:5432/reservadb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SERVER_PORT=8082
    ports:
      - '8084:8082'
    depends_on:
      - rabbitmq
      - dbReserva
    networks:
      - netReservas
      - netApiGateway
  dbReserva:
    image: postgres:latest
    restart: always
    container_name: dbReserva
    environment:
      POSTGRES_DB: reservadb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5434:5432'
    networks:
      - netReservas

  sala:
    restart: always
    container_name: sala
    build:
      context: ./sala
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbSala:5432/saladb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SERVER_PORT=8082
    ports:
      - '8085:8082'
    depends_on:
      - rabbitmq
      - dbSala
    networks:
      - netSalas
      - netApiGateway
  dbSala:
    image: postgres:latest
    restart: always
    container_name: dbSala
    environment:
      POSTGRES_DB: saladb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5435:5432'
    networks:
      - netSalas

  adminer:
    container_name: adminerMicro
    restart: always
    image: adminer:latest
    ports:
      - '8089:8080'
    networks:
      - netUsuario
      - netReservas
      - netSalas
    
  web:
    image: nginx:latest
    volumes:
      - ./application/src:/usr/share/nginx/html
    ports:
      - "3000:80"
    networks:
      - netApiGateway

networks:
  netUsuario:
    driver: bridge
  netReservas:
    driver: bridge
  netSalas:
    driver: bridge
  netApiGateway:
    driver: bridge

# Teste estes endereços no navegador ou Postman:

# - RabbitMQ Management: http://localhost:15672
#   (Usuário: guest, Senha: guest)

# - Serviço usuario (Spring Boot): http://localhost:8083
# - Banco de dados usuario (Postgres): localhost:5433
#   (acessível via Adminer)

# - Serviço reserva (Spring Boot): http://localhost:8084
# - Banco de dados reserva (Postgres): localhost:5434
#   (acessível via Adminer)

# - Serviço sala (Spring Boot): http://localhost:8085
# - Banco de dados sala (Postgres): localhost:5435
#   (acessível via Adminer)

# - Adminer (gerenciador de banco): http://localhost:8089

# - Frontend (Nginx): http://localhost:3000

# Se abrir cada um desses endereços e aparecer a tela do serviço correspondente, está funcionando!
# Para os serviços Spring Boot, normalmente aparece "Whitelabel Error Page" ou uma mensagem padrão se não houver rota configurada.
# Para o RabbitMQ e Adminer, aparecerá a interface web de administração.
# Para o frontend, aparecerá sua aplicação web.
